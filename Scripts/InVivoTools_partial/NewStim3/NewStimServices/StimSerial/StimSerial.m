function out=StimSerial(cmd,varargin)% StimSerial - Interface to serial ports for NewStim.%%  See 'help StimSerialGlobals' for a description of the interface.%%   on MAC2 it is a wrapper for PsychSerial provided by the Psychophysics%   toolbox%   on other systems it is a wrapper around the matlab SERIAL function%% 2007-2014, Alexander Heimel%if strcmp(computer,'MAC2')    arglist=[];    for i=1:length(varargin)        arglist=[arglist ',varargin{' num2str(i) '}']; %#ok<AGROW>    end        command  = ['PsychSerial(cmd' arglist ');'];    switch lower(cmd)        case {'dtr','rts'}            if length(varargin)>1 % probably setting value, no output                out = [];            else                command = ['out=' command];            end        otherwise            command = ['out=' command];    end    eval(command);else    switch lower(cmd)        case 'open'            out=serial(varargin{1});            fopen(out);        case 'close'            fclose(varargin{1});        case {'dtr','dataterminalready'}            state=num2state(varargin{2});            set(varargin{1},'DataTerminalReady',state);        case {'rts','requesttosend'}            state=num2state(varargin{2});            set(varargin{1},'RequestToSend',state);        case {'cts','cleartosend'}             ps = get(varargin{1},'PinStatus');            out = state2num(ps.ClearToSend);        case {'dsr','datasetready'}             ps = get(varargin{1},'PinStatus');            out = state2num(ps.DataSetReady);        otherwise            errormsg('Unknown command ''%s''.');    endendfunction state=num2state( num)% changes 0,1 to 'on','off'if isempty(num)    state='on';elseif ~isnumeric(num)    state=num; % assume it is allright alreadyelse    if num==1        state='on';    else        state='off';    endendfunction num = state2num( state)switch state    case 'off'        num = 0;    case 'on'         num = 1;end